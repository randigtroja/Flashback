<Page
    x:Class="FlashbackUwp.Views.FavouritesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FlashbackUwp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:FlashbackUwp.Converters"
    xmlns:viewModels="using:FlashbackUwp.ViewModels"
    xmlns:controls="using:Template10.Controls"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:model="using:Flashback.Model"
    xmlns:triggers="using:FlashbackUwp.Triggers"
    x:Name="Page"
    mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:FavouritesViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolConverter" />
        <converters:ColorConverter x:Key="ColorConverter" />
        <converters:UnreadMessageBrushconverter x:Key="UnreadMessageBrushconverter"/>

        <DataTemplate x:Key="FavouriteItemTemplate"
                      x:DataType="model:FbFavourite">
            <controls1:SlidableListItem 
                                        RightIcon="Delete"                         
                                        IsPointerReleasedOnSwipingHandled="True"
                                        RightLabel="Ta bort"                                        
                                        RightBackground="Crimson"                        
                                        RightForeground="White"
                                        ActivationWidth="100"
                                        MouseSlidingEnabled="True" 
                                        IsLeftCommandEnabled="False"
                                        RightCommand="{Binding Path=DataContext.DeleteItem, ElementName=Page, Mode=OneWay}"
                                        RightCommandParameter="{Binding}">
                <StackPanel Orientation="Horizontal" Margin="-12,0,0,5">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Left" FontFamily="Segoe MDL2 Assets" Margin="5,2,0,0"  Text="{Binding XamlCode}" Visibility="{Binding ShowForumColor, Converter={StaticResource BoolConverter}, ConverterParameter=true}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="3,0,0,0" FontSize="10" Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" Visibility="{Binding ShowPostCount}" Text="{Binding PostCount}"/>
                    </StackPanel>
                    <StackPanel Margin="12,0,0,0">
                        <TextBlock Width="1000" Text="{Binding Path=Name}" Margin="0" FontWeight="Normal" TextWrapping="Wrap" VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}"/>
                        <TextBlock Text="{Binding Path=LastPost}" Margin="0,-1,0,0" FontWeight="Normal" Foreground="{Binding IsUnread, Converter={StaticResource UnreadMessageBrushconverter}}" TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}"/>
                    </StackPanel>
                </StackPanel>

            </controls1:SlidableListItem>
        </DataTemplate>

    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!-- Header Row -->
            <RowDefinition Height="*" />
            <!-- Content Row -->
            <RowDefinition Height="Auto" />
            <!-- CommandBar Row -->
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="DeviceStates">
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceStateTrigger DeviceFamily="Windows.Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OpenHamburgerMenuButton.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="BottonCommands.Visibility" Value="Visible"/>
                        <Setter Target="pageHeader.PrimaryCommandsVisibility" Value="Collapsed"/>
                        <Setter Target="RefreshButton.Visibility" Value="Collapsed"/>
                        <Setter Target="pageHeader.EllipsisVisibility" Value="Collapsed"/>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="BottonCommands.Visibility" Value="Visible"/>
                        <Setter Target="pageHeader.PrimaryCommandsVisibility" Value="Collapsed"/>
                        <Setter Target="RefreshButton.Visibility" Value="Collapsed"/>
                        <Setter Target="pageHeader.EllipsisVisibility" Value="Collapsed"/>

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="pageHeader.Visibility" Value="Visible"/>
                        <Setter Target="pageHeader.PrimaryCommandsVisibility" Value="Visible"/>
                        <Setter Target="RefreshButton.Visibility" Value="Visible"/>
                        <Setter Target="pageHeader.EllipsisVisibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="pageHeader" Frame="{x:Bind Frame}" Grid.Row="0"                    
                             EllipsisVisibility="Collapsed" 
                             PrimaryCommandsVisibility="Collapsed"
                             Text="Favoriter">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.Refresh}" Label="Ladda om" Icon="Refresh" x:Name="RefreshButton" Visibility="Collapsed"/>
            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>

        <!--  content  -->
        <ListView ItemsSource="{Binding Path=Favourites}" ItemClick="{x:Bind ViewModel.NavigateToThread}" IsItemClickEnabled="True" Padding="12,8,0,0" Grid.Row="1" SelectionMode="None" ItemTemplate="{StaticResource FavouriteItemTemplate}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0,1" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <CommandBar ClosedDisplayMode="Compact" x:Name="BottonCommands" Visibility="Collapsed" Grid.Row="2">
            <CommandBar.Content>
                <AppBarButton Click="{x:Bind ViewModel.OpenMenu}" Visibility="Collapsed" x:Name="OpenHamburgerMenuButton" Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
                    <FontIcon Glyph="&#xE700;"></FontIcon>
                </AppBarButton>
            </CommandBar.Content>
            <AppBarButton Icon="World" Label="Webb" Click="{x:Bind ViewModel.OpenWebb}"/>
            <AppBarButton Name="BottonPrimaryHome" Icon="Refresh" Label="Ladda om" Click="{x:Bind ViewModel.Refresh}" />
        </CommandBar>

    </Grid>
</Page>
